CounterContext.js
import React, { createContext, useReducer } from 'react';


export const CounterContext = createContext();


const initialState = { count: 0 };


const counterReducer = (state, action) => {
  switch (action.type) {
    case 'INCREMENT':
      return { count: state.count + 1 };
    case 'DECREMENT':
      return { count: state.count - 1 };
    default:
      return state;
  }
};


export const CounterProvider = ({ children }) => {
  const [state, dispatch] = useReducer(counterReducer, initialState);

  return (
    <CounterContext.Provider value={{ state, dispatch }}>
      {children}
    </CounterContext.Provider>
  );
};


Counter.js
import React, { useContext } from 'react';
import { CounterContext } from './CounterContext';
import './Counter.css';

const Counter = () => {
  const { state, dispatch } = useContext(CounterContext);

  return (
    <div className="counter-container">
      <h1 className="counter-value">{state.count}</h1>
      <div className="buttons">
        <button className="button" onClick={() => dispatch({ type: 'INCREMENT' })}>Increment</button>
        <button className="button" onClick={() => dispatch({ type: 'DECREMENT' })}>Decrement</button>
      </div>
    </div>
  );
};

export default Counter;


App.js
import React from 'react';
import { CounterProvider } from './CounterContext';
import Counter from './Counter';

function App() {
  return (
    <CounterProvider>
      <Counter />
    </CounterProvider>
  );
}

export default App;

Counter.css */
.counter-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 50px;
}

.counter-value {
  font-size: 48px;
  margin-bottom: 20px;
}

.buttons {
  display: flex;
  gap: 10px;
}

.button {
  padding: 10px 20px;
  font-size: 16px;
  cursor: pointer;
  border: none;
  background-color: #4CAF50;

}

.button:hover {
  background-color: #45a049;
}

